const _queueAsyncBuckets=new Map,_gcLimit=1E4;async function _asyncQueueExecutor(a,d){for(var b=0;;){let c=Math.min(a.length,_gcLimit);for(;b<c;b++){const e=a[b];try{e.resolve(await e.awaitable())}catch(f){e.reject(f)}}if(c<a.length)c>=_gcLimit?(a.splice(0,c),b=0):b=c;else break}d()}
module.exports=function(a,d){d.name||(Object.defineProperty(d,"name",{writable:!0}),"string"===typeof a?d.name=a:console.warn("Unhandled bucket type (for naming):",typeof a,a));let b;_queueAsyncBuckets.has(a)||(_queueAsyncBuckets.set(a,[]),b=!0);const c=_queueAsyncBuckets.get(a),e=new Promise((f,g)=>c.push({awaitable:d,resolve:f,reject:g}));b&&_asyncQueueExecutor(c,()=>_queueAsyncBuckets.delete(a));return e};
